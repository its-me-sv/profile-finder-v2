{"version":3,"sources":["components/card/card.component.jsx","constants.js","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","firstName","email","CardList","monsters","map","SearchBox","placeholderText","handleChange","type","placeholder","onChange","App","updateSearchField","event","setState","searchField","target","value","filteredBots","state","filter","toLowerCase","includes","fetch","headers","then","response","json","data","catch","console","log","this","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2UAWaA,EAAO,SAAAC,GAChB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,UACJC,IAAG,UCba,uBDab,YACwBH,EAAMI,QAAQC,GADtC,gBCXS,MDWT,iBCZU,aDgBjB,6BAAKL,EAAMI,QAAQE,YACnB,4BAAIN,EAAMI,QAAQG,YEZjBC,EAAW,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACtB,OACI,qBAAKR,UAAU,YAAf,SACKQ,EAASC,KAAI,SAAAN,GAAO,OACjB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCPtBM,G,MAAY,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,gBAAiBC,EAAkB,EAAlBA,aACxC,OACI,uBACIZ,UAAU,SACVa,KAAK,SACLC,YAAaH,EACbI,SAAUH,MCgEPI,E,kDA7Db,WAAYjB,GAAO,IAAD,8BAChB,cAAMA,IAuBRkB,kBAAoB,SAAAC,GAClB,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAzBzB,EAkClBC,aAAe,WACb,MAAgC,EAAKC,MAA9BhB,EAAP,EAAOA,SAAUY,EAAjB,EAAiBA,YACjB,OAAOZ,EAASiB,QAAO,SAAAtB,GAAO,OAC5BA,EACCE,UACAqB,cACAC,SAASP,EAAYM,mBAtCxB,EAAKF,MAAQ,CACXhB,SAAU,GACVY,YAAa,IAJC,E,qDAQlB,WAAqB,IAAD,OAClBQ,MHxByB,mCGwBJ,CACnBC,QAAS,CACP,SHzBqB,8BG4BxBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,gBAAEG,EAAF,EAAEA,KAAF,OAAY,EAAKd,SAAS,CAACX,SAASyB,OACzCC,MAAMC,QAAQC,O,oBA2BjB,WACE,OACE,sBAAKpC,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,4BACA,cAAC,EAAD,CACEW,gBAAkB,eAClBC,aAAgByB,KAAKpB,oBAGrBoB,KAAKb,MAAMhB,SAAS8B,OAAS,EACzB,cAAC,EAAD,CAAU9B,SAAU6B,KAAKd,iBAC3B,0D,GAvDMgB,aCFHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a9969852.chunk.js","sourcesContent":["// Constants and Main Modules\r\nimport React from 'react';\r\nimport {\r\n    ROBOHASH_API_URL,\r\n    ROBOHASH_SIZE,\r\n    ROBOHASH_SET\r\n} from '../../constants.js';\r\n\r\n// Style Sheets\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img \r\n                alt=\"monster\" \r\n                src={\r\n                    `${ROBOHASH_API_URL}/${props.monster.id}?set=${ROBOHASH_SET}&size=${ROBOHASH_SIZE}`\r\n                }\r\n            ></img>\r\n            <h1>{props.monster.firstName}</h1>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    );\r\n};","export const DUMMY_API_URL = \"https://dummyapi.io/data/v1/user\";\r\nexport const DUMMY_API_KEY = \"6159d50c799560c3e06eba56\";\r\n\r\nexport const ROBOHASH_API_URL = \"https://robohash.org\"\r\nexport const ROBOHASH_SIZE = \"180x180\";\r\nexport const ROBOHASH_SET = \"any\";","// Constants and Main Modules\r\nimport React from 'react';\r\n\r\n// Style Sheets\r\nimport './card-list.styles.css';\r\n\r\n// Components\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = ({monsters}) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {monsters.map(monster => \r\n                <Card key={monster.id} monster={monster} />)}\r\n        </div>\r\n    );\r\n};","// Constants and Main Modules\r\nimport React from 'react';\r\n\r\n// Style Sheets\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholderText, handleChange}) => {\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            type=\"search\"\r\n            placeholder={placeholderText}\r\n            onChange={handleChange}\r\n        ></input>\r\n    );\r\n};","// Constants and Main Modules\nimport React, {Component} from 'react';\nimport {\n  DUMMY_API_URL,\n  DUMMY_API_KEY\n} from '../constants.js';\n\n// Style Sheets\nimport './App.css';\n\n// Components\nimport {CardList} from '../components/card-list/card-list.component';\nimport {SearchBox} from '../components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(DUMMY_API_URL, {\n      headers: {\n        'app-id': DUMMY_API_KEY\n      } \n    })\n    .then(response => response.json())\n    .then(({data}) => this.setState({monsters:data}))\n    .catch(console.log);\n  }\n\n  /**\n * updateSearchField takes event object as argument.\n * Doesn't return any value.\n * Updates the searchField of state with event.target.value\n */\n  updateSearchField = event => {\n    this.setState({searchField: event.target.value});\n  }\n\n  /**\n * filteredBots doesn't take any argument.\n * The return value is an array in all cases.\n * Filters monsters whose firstName property\n * includes string from searchField\n */\n  filteredBots = () => {\n    const {monsters, searchField} = this.state;\n    return monsters.filter(monster => \n      monster\n      .firstName\n      .toLowerCase()\n      .includes(searchField.toLowerCase()));\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">RoboFriends v2</h1>\n        <SearchBox\n          placeholderText = \"Search Users\"\n          handleChange = {this.updateSearchField}\n        />\n        {\n          this.state.monsters.length > 0 \n            ? <CardList monsters={this.filteredBots()} />\n          : <h1>Fetching Data ...</h1>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}